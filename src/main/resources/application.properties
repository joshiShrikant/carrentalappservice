spring.application.name=car_rental
server.port=8090
jwt.secret="aBcDeFgHiJkLmNoPqRsTuVwXyZ123456aBcDeFgHiJkLmNoPqRsTuVwXyZ123456aBcDeFgHiJkLmNoPqRsTuVwXyZ123456"


#My-SQL Database start
spring.datasource.url=jdbc:mysql://localhost:3306/car_rental_db
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.show-sql=true
spring.main.allow-bean-definition-overriding=true

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#My-SQL Database End

# Email start
spring.mail.host=smtp.gmail.com
spring.mail.port=587
#spring.mail.username=verificationservice2@outlook.com
#spring.mail.password=Pune@1234
spring.mail.username=shree.agasti@gmail.com
spring.mail.password=lbvheyvedaekcxvh
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true
# Email end


#Redis start
spring.redis.host=localhost
spring.redis.port=6379
cache.type=redis
spring.cache.type=redis
spring.cache.name=redis1
spring.cache.redis.key-prefix=car_rental_
spring.cache.redis.time-to-live=36000

#spring.redis.password=
#spring.redis.jedis.pool.max-active=100
#spring.redis.jedis.pool.max-idle=100
#spring.redis.jedis.pool.min-idle=10
#spring.redis.jedis.pool.max-wait=1000
#Redis end

# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.disable-swagger-default-url=false
#springdoc.swagger-ui.url=/api-docs

# OpenAPI Configuration
openapi.dev-url=http://localhost:8090
openapi.app-version=1.0.0
openapi.app-title=Car Rental API
openapi.app-description=API documentation for Car Rental Application

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.health.db.enabled=true
management.metrics.export.prometheus.enabled=true

# CORS Configuration for Swagger UI
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true